public static class QuoteCollection
{
    public static readonly Quotation[] Quotes = [
        new() { author = "Alan Kay", quote = "The best way to predict the future is to invent it." },
        new() { author = "Cory House", quote = "Code is like humor. When you have to explain it, it's bad." },
        new() { author = "John Johnson", quote = "First, solve the problem. Then, write the code." },
        new() { author = "Martin Fowler", quote = "Any fool can write code that a computer can understand. Good programmers write code that humans can understand." },
        new() { author = "Oscar Wilde", quote = "Experience is the name everyone gives to their mistakes." },
        new() { author = "Chris Heilmann", quote = "Java is to JavaScript what car is to Carpet." },
        new() { author = "Linus Torvalds", quote = "Talk is cheap. Show me the code." },
        new() { author = "Dennis Ritchie", quote = "The only way to learn a new programming language is by writing programs in it." },
        new() { author = "Harold Abelson", quote = "Programs must be written for people to read, and only incidentally for machines to execute." },
        new() { author = "Edsger W. Dijkstra", quote = "Simplicity is prerequisite for reliability." },
        new() { author = "Kent Beck", quote = "Make it work, make it right, make it fast." },
        new() { author = "Alan Kay", quote = "The most disastrous thing that you can ever learn is your first programming language." },
        new() { author = "Brian Kernighan", quote = "Debugging is twice as hard as writing the code in the first place." },
        new() { author = "Edward V. Berard", quote = "Walking on water and developing software from a specification are easy if both are frozen." },
        new() { author = "Anonymous", quote = "It's not a bug – it's an undocumented feature." },
        new() { author = "Ralph Johnson", quote = "Before software can be reusable it first has to be usable." },
        new() { author = "Donald Knuth", quote = "Premature optimization is the root of all evil." },
        new() { author = "Grady Booch", quote = "The function of good software is to make the complex appear to be simple." },
        new() { author = "Phil Karlton", quote = "There are only two hard things in Computer Science: cache invalidation and naming things." },
        new() { author = "Louis Srygley", quote = "Without requirements or design, programming is the art of adding bugs to an empty Quote file." },
        new() { author = "Thomas Fuchs", quote = "The best error message is the one that never shows up." },
        new() { author = "Jim McCarthy", quote = "You can't have great software without a great team, and most software teams behave like dysfunctional families." },
        new() { author = "Steve McConnell", quote = "Good code is its own best documentation." },
        new() { author = "Bill Gates", quote = "The computer was born to solve problems that did not exist before." },
        new() { author = "Burt Rutan", quote = "Testing leads to failure, and failure leads to understanding." },
        new() { author = "Chris Pine", quote = "Programming isn't about what you know; it's about what you can figure out." },
        new() { author = "Brian Kernighan", quote = "Everyone knows that debugging is twice as hard as writing a program in the first place. So if you're as clever as you can be when you write it, how will you ever debug it?" },
        new() { author = "Jeff Sickel", quote = "Deleted code is debugged code." },
        new() { author = "Edsger W. Dijkstra", quote = "If debugging is the process of removing bugs, then programming must be the process of putting them in." },
        new() { author = "Paul Graham", quote = "In programming, the hard part isn't solving problems, but deciding what problems to solve." },
        new() { author = "Brian Kernighan", quote = "Don't comment bad code—rewrite it." },
        new() { author = "Joel Spolsky", quote = "It's harder to read code than to write it." },
        new() { author = "Dan Salomon", quote = "Sometimes it pays to stay in bed on Monday, rather than spending the rest of the week debugging Monday's code." },
        new() { author = "C.A.R. Hoare", quote = "The most important property of a program is whether it accomplishes the intention of its user." },
        new() { author = "Ron Jeffries", quote = "Code never lies, comments sometimes do." },
        new() { author = "Alan Perlis", quote = "A language that doesn't affect the way you think about programming is not worth knowing." },
        new() { author = "Bill Gates", quote = "Measuring programming progress by lines of code is like measuring aircraft building progress by weight." },
        new() { author = "Brian Kernighan", quote = "Controlling complexity is the essence of computer programming." },
        new() { author = "Anonymous", quote = "The best thing about a boolean is even if you are wrong, you are only off by a bit." },
        new() { author = "John Woods", quote = "Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live." },
        new() { author = "Ken Thompson", quote = "One of my most productive days was throwing away 1000 lines of code." },
        new() { author = "Anonymous", quote = "Software and cathedrals are much the same – first we build them, then we pray." },
        new() { author = "Robert C. Martin", quote = "The only way to go fast is to go well." },
        new() { author = "Douglas Hofstadter", quote = "Hofstadter's Law: It always takes longer than you expect, even when you take into account Hofstadter's Law." },
        new() { author = "Alan Perlis", quote = "There are two ways to write error-free programs; only the third one works." },
        new() { author = "Donald Knuth", quote = "If you optimize everything, you will always be unhappy." },
        new() { author = "Niklaus Wirth", quote = "A primary cause of complexity is that software vendors uncritically adopt almost any feature that users want." },
        new() { author = "John Ousterhout", quote = "The best performance improvement is the transition from the nonworking state to the working state." },
        new() { author = "Anonymous", quote = "Weeks of coding can save you hours of planning." },
        new() { author = "Every Developer Ever", quote = "It works on my machine." }
    ];
}